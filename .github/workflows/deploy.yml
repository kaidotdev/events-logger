name: Deploy
on: [push]
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-18.04
    steps:
      - name: Check out code
        uses: actions/checkout@v1
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v1
        with:
          github_token: ${{ secrets.TOKEN }}
          golangci_lint_flags: "--exclude-use-default=false"
      - name: kubeval
        uses: instrumenta/kubeval-action@master
        with:
          files: manifests/cluster_role.yaml,manifests/cluster_role_binding.yaml,manifests/deployment.yaml,manifests/pod_disruption_budget.yaml,manifests/role.yaml,manifests/role_binding.yaml,manifests/service_account.yaml
          strict: true
          ignore_missing_schemas: true
  test:
    name: Test
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Check out code
        uses: actions/checkout@v1
      - name: Cache go build
        uses: actions/cache@preview
        with:
          path: /home/runner/.cache/go-build
          key: ${{ hashFiles(format('{0}{1}', github.workspace, '/**/*.go')) }}
      - name: Test
        run: go test ./... -race -bench . -benchmem -trimpath
  publish:
    name: Publish
    runs-on: ubuntu-18.04
    needs: [lint, test]
    env:
      OWNER: kaidotdev
      REPOSITORY_NAME: events-logger
      IMAGE_NAME: events-logger
      DOCKER_BUILDKIT: 1
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go
      - name: Check out code
        uses: actions/checkout@v1
      - name: Publish
        run: |
          IMAGE_PATH=docker.pkg.github.com/${OWNER}/${REPOSITORY_NAME}/${IMAGE_NAME}
          TAG=$(git rev-parse --short HEAD)
          docker build -t $IMAGE_PATH:$TAG .
          docker login docker.pkg.github.com -u $OWNER -p ${{ secrets.TOKEN }}
          docker push $IMAGE_PATH:$TAG
